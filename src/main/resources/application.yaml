spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/demojava
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  datasource:
    url: jdbc:mariadb://localhost:3306/social-commerce-platform?useSSL=false
    username: root
    password: 123

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  data:
    mongodb:
      uri:  mongodb://localhost:27017/user-journey-flow
      database: user-journey-flow
      auto-index-creation: true
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    topics:
      test-kafka: test-kafka
      post-click-contact : post-click-contact
      user-journey: user-journey
      create-schedule: create-schedule
keycloak:
  auth:
    server:
      url: http://localhost:8080
  realm: demojava
  admin:
    username: sa
    password: 123
  clientId: demokeycloak
  credential:
    secret-admin: NfbEHwA2deO6sCyPJVejqM2kOkkyzL1N
server:
  port: 8081
cache:
  default-ttl-in-seconds: 20





